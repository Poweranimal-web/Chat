# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled1.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import json
from twisted.internet import protocol, task
from twisted.internet.protocol import ClientFactory, Protocol
import time
from PyQt5 import QtCore, QtGui, QtWidgets
port = 9090
name = []
registered = False
showclients = False
write = False
check_mess = False
tm = time.time()
inf = {}
message = {}
class Ui_MainWindow1(object):
        def conn(self):
            self.ui = Ui_MainWindow()
            self.ui.setupUi(MainWindow)
        def setupUi(self, MainWindow):
            MainWindow.setObjectName("MainWindow")
            MainWindow.resize(430, 429)
            MainWindow.setStyleSheet("background-color: rgb(255, 255, 255)")
            self.centralwidget = QtWidgets.QWidget(MainWindow)
            self.centralwidget.setObjectName("centralwidget")
            self.pushButton = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton.setEnabled(True)
            self.pushButton.setGeometry(QtCore.QRect(80, 330, 271, 41))
            font = QtGui.QFont()
            font.setFamily("Copperplate Gothic Bold")
            self.pushButton.setFont(font)
            self.pushButton.setStyleSheet("QPushButton{\n"
    "background-color:rgb(85, 0, 255);\n"
    "border-top-left-radius: 10%;\n"
    "border-top-right-radius: 10%;\n"
    "border-bottom-left-radius: 10%;\n"
    "border-bottom-right-radius: 10%;\n"
    "}")
            self.pushButton.setObjectName("pushButton")
            self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_2.setGeometry(QtCore.QRect(-6, -8, 221, 131))
            font = QtGui.QFont()
            font.setPointSize(15)
            self.pushButton_2.setFont(font)
            self.pushButton_2.setStyleSheet("QPushButton{\n"
    "border:0 px;\n"
    "}\n"
    ".QPushButton:hover{\n"
    "background-color:rgb(216, 216, 216);\n"
    "}\n"
    "")
            self.pushButton_2.setObjectName("pushButton_2")
            self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_3.setGeometry(QtCore.QRect(214, -8, 221, 131))
            font = QtGui.QFont()
            font.setPointSize(15)
            self.pushButton_3.setFont(font)
            self.pushButton_3.setStyleSheet("QPushButton{\n"
    "border: 0 px;\n"
    "}\n"
    ".QPushButton:hover{\n"
    "background-color:rgb(216, 216, 216);\n"
    "}")
            self.pushButton_3.setObjectName("pushButton_3")
            self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
            self.checkBox.setGeometry(QtCore.QRect(110, 290, 91, 17))
            self.checkBox.setObjectName("checkBox")
            self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
            self.lineEdit.setGeometry(QtCore.QRect(110, 190, 241, 31))
            font = QtGui.QFont()
            font.setPointSize(14)
            self.lineEdit.setFont(font)
            self.lineEdit.setStyleSheet("QLineEdit{\n"
    "\n"
    "border-top-right-radius:10%;\n"
    "border-bottom-right-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "color:rgb(255, 255, 255);\n"
    "}")
            self.lineEdit.setObjectName("lineEdit")
            self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
            self.lineEdit_2.setGeometry(QtCore.QRect(110, 240, 241, 31))
            font = QtGui.QFont()
            font.setPointSize(14)
            self.lineEdit_2.setFont(font)
            self.lineEdit_2.setStyleSheet("QLineEdit{\n"
    "\n"
    "\n"
    "border-top-right-radius:10%;\n"
    "border-bottom-right-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "color: rgb(255, 255, 255);\n"
    "\n"
    "}")
            self.lineEdit_2.setObjectName("lineEdit_2")
            self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_4.setGeometry(QtCore.QRect(80, 190, 31, 31))
            self.pushButton_4.setStyleSheet("QPushButton{\n"
    "border-top-left-radius:10%;\n"
    "border-bottom-left-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "}")
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap("padlock.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.pushButton_4.setIcon(icon)
            self.pushButton_4.setObjectName("pushButton_4")
            self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_5.setGeometry(QtCore.QRect(80, 240, 31, 31))
            self.pushButton_5.setStyleSheet("QPushButton{\n"
    "border-top-left-radius:10%;\n"
    "border-bottom-left-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "}")
            self.pushButton_5.setIcon(icon)
            self.pushButton_5.setObjectName("pushButton_5")
            MainWindow.setCentralWidget(self.centralwidget)

            self.retranslateUi(MainWindow)
            QtCore.QMetaObject.connectSlotsByName(MainWindow)
            self.pushButton.setCheckable(True)
            self.pushButton.toggle()
            self.pushButton.clicked.connect(self.check)
            self.pushButton_3.clicked.connect(self.conn)
            self.lineEdit.setPlaceholderText('Enter your login:')
            self.lineEdit_2.setPlaceholderText('Enter your password:')
        def retranslateUi(self, MainWindow):
            _translate = QtCore.QCoreApplication.translate
            MainWindow.setWindowTitle(_translate("MainWindow", "Gusmes"))
            self.pushButton.setText(_translate("MainWindow", "login"))
            self.pushButton_2.setText(_translate("MainWindow", "Sing in"))
            self.pushButton_3.setText(_translate("MainWindow", "New account"))
            self.checkBox.setText(_translate("MainWindow", "Private Police"))
        def check(self):
            login = self.lineEdit.text()
            password = self.lineEdit_2.text()
            inf['login'] = login
            inf['password'] = password
            reactor.connectTCP('localhost', port, ClientChatFactory())
class Ui_MainWindow(object):
        def conn(self):
            self.ui = Ui_MainWindow1()
            self.ui.setupUi(MainWindow)
        def setupUi(self, MainWindow):
            self.main = MainWindow.setObjectName("MainWindow")
            MainWindow.resize(438, 418)
            MainWindow.setAcceptDrops(True)
            MainWindow.setStyleSheet("background-color:rgb(255, 255, 255);")
            self.centralwidget = QtWidgets.QWidget(MainWindow)
            self.centralwidget.setObjectName("centralwidget")
            self.pushButton = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton.setGeometry(QtCore.QRect(-6, -8, 221, 131))
            font = QtGui.QFont()
            font.setPointSize(15)
            self.pushButton.setFont(font)
            self.pushButton.setStyleSheet("QPushButton{\n"
    "\n"
    "border: 0 px;\n"
    "background-color: rgb(255, 255, 255);\n"
    "\n"
    "\n"
    "}\n"
    ".QPushButton:hover{\n"
    "background-color:rgb(216, 216, 216);\n"
    "\n"
    "}")
            self.pushButton.setObjectName("pushButton")
            self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_2.setGeometry(QtCore.QRect(214, -8, 231, 131))
            font = QtGui.QFont()
            font.setPointSize(15)
            self.pushButton_2.setFont(font)
            self.pushButton_2.setStyleSheet("QPushButton{\n"
    "\n"
    "border: 0 px;\n"
    "background-color: rgb(255, 255, 255);\n"
    "\n"
    "\n"
    "}\n"
    "\n"
    ".QPushButton:hover{\n"
    "background-color:rgb(216, 216, 216);\n"
    "}")
            self.pushButton_2.setObjectName("pushButton_2")
            self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
            self.checkBox.setGeometry(QtCore.QRect(90, 320, 91, 17))
            self.checkBox.setObjectName("checkBox")
            self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_3.setEnabled(True)
            self.pushButton_3.setGeometry(QtCore.QRect(80, 360, 271, 41))
            font = QtGui.QFont()
            font.setFamily("Copperplate Gothic Bold")
            self.pushButton_3.setFont(font)
            self.pushButton_3.setStyleSheet("QPushButton{\n"
    "background-color:rgb(85, 0, 255);\n"
    "border-top-left-radius: 10%;\n"
    "border-top-right-radius: 10%;\n"
    "border-bottom-left-radius: 10%;\n"
    "border-bottom-right-radius: 10%;\n"
    "}")
            self.pushButton_3.setObjectName("pushButton_3")
            self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
            self.lineEdit.setGeometry(QtCore.QRect(120, 170, 241, 31))
            font = QtGui.QFont()
            font.setPointSize(14)
            self.lineEdit.setFont(font)
            self.lineEdit.setStyleSheet("QLineEdit{\n"
    "\n"
    "border-top-right-radius:10%;\n"
    "border-bottom-right-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "color:rgb(255, 255, 255);\n"
    "}")
            self.lineEdit.setText("")
            self.lineEdit.setObjectName("lineEdit")
            self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
            self.lineEdit_2.setGeometry(QtCore.QRect(120, 220, 241, 31))
            font = QtGui.QFont()
            font.setPointSize(14)
            self.lineEdit_2.setFont(font)
            self.lineEdit_2.setStyleSheet("QLineEdit{\n"
    "\n"
    "border-top-right-radius:10%;\n"
    "border-bottom-right-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "color:rgb(255, 255, 255);\n"
    "}")
            self.lineEdit_2.setObjectName("lineEdit_2")
            self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
            self.lineEdit_3.setGeometry(QtCore.QRect(120, 270, 241, 31))
            font = QtGui.QFont()
            font.setPointSize(14)
            self.lineEdit_3.setFont(font)
            self.lineEdit_3.setStyleSheet("QLineEdit{\n"
    "\n"
    "border-top-right-radius:10%;\n"
    "border-bottom-right-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "color:rgb(255, 255, 255);\n"
    "}")
            self.lineEdit_3.setObjectName("lineEdit_3")
            self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_4.setGeometry(QtCore.QRect(90, 170, 31, 31))
            self.pushButton_4.setStyleSheet("QPushButton{\n"
    "border-top-left-radius:10%;\n"
    "border-bottom-left-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "}")
            icon = QtGui.QIcon()
            icon.addPixmap(QtGui.QPixmap("padlock.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
            self.pushButton_4.setIcon(icon)
            self.pushButton_4.setObjectName("pushButton_4")
            self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_5.setGeometry(QtCore.QRect(90, 220, 31, 31))
            self.pushButton_5.setStyleSheet("QPushButton{\n"
    "border-top-left-radius:10%;\n"
    "border-bottom-left-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "}")
            self.pushButton_5.setIcon(icon)
            self.pushButton_5.setObjectName("pushButton_5")
            self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_6.setGeometry(QtCore.QRect(90, 270, 31, 31))
            self.pushButton_6.setStyleSheet("QPushButton{\n"
    "border-top-left-radius:10%;\n"
    "border-bottom-left-radius:10%;\n"
    "background-color: rgb(85, 0, 255);\n"
    "}")
            self.pushButton_6.setIcon(icon)
            self.pushButton_6.setObjectName("pushButton_6")
            MainWindow.setCentralWidget(self.centralwidget)

            self.retranslateUi(MainWindow)
            QtCore.QMetaObject.connectSlotsByName(MainWindow)
            self.pushButton.clicked.connect(self.conn)
            self.lineEdit.setPlaceholderText('Enter your login:')
            self.lineEdit_2.setPlaceholderText('Enter your password:')
            self.lineEdit_3.setPlaceholderText('Repeat your password:')
            self.pushButton_3.setCheckable(True)
            self.pushButton_3.toggle()
            self.pushButton_3.clicked.connect(self.check)
        def retranslateUi(self, MainWindow):
            _translate = QtCore.QCoreApplication.translate
            MainWindow.setWindowTitle(_translate("MainWindow", "Gusmes"))
            self.pushButton.setText(_translate("MainWindow", "Sing in"))
            self.pushButton_2.setText(_translate("MainWindow", "New account"))
            self.checkBox.setText(_translate("MainWindow", "Private Police"))
            self.pushButton_3.setText(_translate("MainWindow", "login"))
        def check(self):
                login = self.lineEdit.text()
                password = self.lineEdit_2.text()
                repeat_password = self.lineEdit_3.text()
                inf['login'] = login
                inf['password'] = password
                inf['repeat_password'] = repeat_password
                if password == repeat_password:
                    reactor.connectTCP('localhost', port, ClientChatFactory2())
                else:
                    self.lineEdit_2.setStyleSheet("QLineEdit{"
                                                  "background-color: rgb(255, 0, 0);"
                                                  "}")
                    self.lineEdit_3.setStyleSheet("QLineEdit{"
                                                  "background-color: rgb(255, 0, 0);"
                                                  "}")

class InputBox(QtWidgets.QDialog):
    def __init__(self, parent=None):
        super(InputBox, self).__init__(parent)
        open_message = QtWidgets.QLabel("Enter Login:")
        self.txt = QtWidgets.QLineEdit()
        save = QtWidgets.QPushButton('add',   clicked=self.accept)
        cancel = QtWidgets.QPushButton('Cancel', clicked=self.reject)

        grid = QtWidgets.QGridLayout(self)
        grid.setSpacing(10)
        grid.addWidget(open_message, 0, 0)
        grid.addWidget(self.txt, 1, 0, 1, 2)
        grid.addWidget(save, 2, 0)
        grid.addWidget(cancel, 2, 1)
        self.setFixedSize(self.sizeHint())

    def save(self):
        value = self.txt.text()
        return value
class Ui_MainWindow2(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(879, 550)
        MainWindow.setStyleSheet("background-color: rgb(255, 255, 255)")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(240, 0, 641, 80))
        self.widget.setObjectName("widget")
        self.pushButton_5 = QtWidgets.QPushButton(self.widget)
        self.pushButton_5.setGeometry(QtCore.QRect(470, 10, 75, 51))
        self.pushButton_5.setStyleSheet("QPushButton{\n"
"border:0px;\n"
"\n"
"\n"
"}")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("phone-call.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_5.setIcon(icon)
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.widget)
        self.pushButton_6.setGeometry(QtCore.QRect(370, 10, 75, 51))
        self.pushButton_6.setStyleSheet("QPushButton{\n"
"border:0px;\n"
"\n"
"\n"
"}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("add-user.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_6.setIcon(icon1)
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_3 = QtWidgets.QPushButton(self.widget)
        self.pushButton_3.setGeometry(QtCore.QRect(570, 10, 75, 61))
        self.pushButton_3.setStyleSheet("QPushButton{\n"
"border:0px;\n"
"\n"
"\n"
"}")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("information.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3.setIcon(icon2)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_8.setGeometry(QtCore.QRect(230, 510, 61, 41))
        self.pushButton_8.setStyleSheet("QPushButton{\n"
"border:0px;\n"
"\n"
"\n"
"}")
        self.pushButton_8.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("file.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_8.setIcon(icon3)
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_9.setGeometry(QtCore.QRect(290, 510, 61, 41))
        self.pushButton_9.setStyleSheet("QPushButton{\n"
"border: 0 px;\n"
"\n"
"\n"
"\n"
"}")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("smile.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_9.setIcon(icon4)
        self.pushButton_9.setObjectName("pushButton_9")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 221, 551))
        self.tabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setIconSize(QtCore.QSize(35, 66))
        self.tabWidget.setUsesScrollButtons(False)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.listWidget_2 = QtWidgets.QListWidget(self.tab)
        self.listWidget_2.setGeometry(QtCore.QRect(0, 0, 216, 473))
        self.listWidget_2.setObjectName("listWidget_2")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("comment.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab, icon5, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.listWidget = QtWidgets.QListWidget(self.tab_3)
        self.listWidget.setGeometry(QtCore.QRect(0, 0, 216, 473))
        self.listWidget.setObjectName("listWidget")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("user.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab_3, icon6, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.pushButton = QtWidgets.QPushButton(self.tab_2)
        self.pushButton.setGeometry(QtCore.QRect(0, 150, 221, 31))
        font = QtGui.QFont()
        font.setFamily("Tahoma")
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("QPushButton{\n"
"border:0 px;\n"
"}\n"
".QPushButton:hover{\n"
"background-color:rgb(216, 216, 216);\n"
"}\n"
"")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("customer-support.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon7)
        self.pushButton.setIconSize(QtCore.QSize(22, 29))
        self.pushButton.setCheckable(False)
        self.pushButton.setChecked(False)
        self.pushButton.setAutoRepeat(False)
        self.pushButton.setAutoExclusive(False)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_2.setGeometry(QtCore.QRect(-6, 182, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Tahoma")
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("QPushButton{\n"
"border:0 px;\n"
"}\n"
".QPushButton:hover{\n"
"background-color:rgb(216, 216, 216);\n"
"}\n"
"")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("technical-support.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_2.setIcon(icon8)
        self.pushButton_2.setIconSize(QtCore.QSize(28, 33))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_4 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_4.setGeometry(QtCore.QRect(-6, 220, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Tahoma")
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("QPushButton{\n"
"border:0 px;\n"
"}\n"
".QPushButton:hover{\n"
"background-color:rgb(216, 216, 216);\n"
"}\n"
"")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("logout.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_4.setIcon(icon9)
        self.pushButton_4.setIconSize(QtCore.QSize(28, 33))
        self.pushButton_4.setObjectName("pushButton_4")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("menu.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab_2, icon10, "")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(360, 501, 401, 51))
        self.textEdit.setObjectName("textEdit")
        self.pushButton_10 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_10.setGeometry(QtCore.QRect(770, 506, 41, 41))
        self.pushButton_10.setStyleSheet(".QPushButton{\n"
"background-color:rgb(85, 0, 255);\n"
"border-top-left-radius:20%;\n"
"border-top-right-radius:20%;\n"
"border-bottom-left-radius:20%;\n"
"border-bottom-right-radius:20%;\n"
"\n"
"\n"
"}")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("paper-plane.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_10.setIcon(icon11)
        self.pushButton_10.setIconSize(QtCore.QSize(30, 30))
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(830, 506, 41, 41))
        self.pushButton_7.setStyleSheet(".QPushButton{\n"
"background-color:rgb(85, 0, 255);\n"
"border-top-left-radius:20%;\n"
"border-top-right-radius:20%;\n"
"border-bottom-left-radius:20%;\n"
"border-bottom-right-radius:20%;\n"
"\n"
"\n"
"}")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("voice-message.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_7.setIcon(icon12)
        self.pushButton_7.setIconSize(QtCore.QSize(30, 30))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_11 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_11.setGeometry(QtCore.QRect(190, 0, 41, 71))
        self.pushButton_11.setStyleSheet("QPushButton{\n"
"border:0px;\n"
"\n"
"\n"
"}")
        self.pushButton_11.setIcon(icon1)
        self.pushButton_11.setObjectName("pushButton_11")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(220, 80, 658, 421))
        self.plainTextEdit.setReadOnly(True)
        self.plainTextEdit.setObjectName("plainTextEdit")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton_11.clicked.connect(self.add_user)
        self.pushButton_10.clicked.connect(self.conn)
        self.textEdit.setPlaceholderText('write message')
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Gusmes"))
        self.pushButton.setText(_translate("MainWindow", "Settings"))
        self.pushButton_2.setText(_translate("MainWindow", "Support"))
        self.pushButton_4.setText(_translate("MainWindow", "Log Out"))

    def add_user(self):
        input_box = InputBox()
        input_box.setWindowTitle("InputBox Dialog")
        if input_box.exec_() == QtWidgets.QDialog.Accepted:
                val = input_box.save()
                newButton = QtWidgets.QPushButton(f'{val}')
                newButton.setStyleSheet("QPushButton:hover{\n"
                                        "background-color:rgb(216, 216, 216);\n"
                                        "}"
                                        "QPushButton{\n"
                                        "border:0px;\n"
                                        "height:38px;\n"
                                        "}"
                                        )
                self.word = newButton.text()
                newButton.clicked.connect(self.add_chat)
                listWidgetItem = QtWidgets.QListWidgetItem()
                listWidgetItem.setSizeHint(newButton.sizeHint())
                self.listWidget.addItem(listWidgetItem)
                self.listWidget.setItemWidget(listWidgetItem, newButton)
                self.listWidget.scrollToItem(listWidgetItem)
    def conn(self):
         message_send = self.textEdit.toPlainText()
         message['message'] = message_send
         reactor.connectTCP('localhost', port, ClientChatFactory3())
         self.plainTextEdit.appendPlainText(message_send)
         self.textEdit.clear()
    def add_chat(self):
        newButton = QtWidgets.QPushButton(self.word)
        newButton.setStyleSheet("QPushButton:hover{\n"
                                "background-color:rgb(216, 216, 216);\n"
                                "}"
                                "QPushButton{\n"
                                "border:0px;\n"
                                "height:50px;\n"
                                "}"
                                )
        listWidgetItem = QtWidgets.QListWidgetItem()
        listWidgetItem.setSizeHint(newButton.sizeHint())
        self.listWidget_2.addItem(listWidgetItem)
        self.listWidget_2.setItemWidget(listWidgetItem, newButton)
        self.listWidget_2.scrollToItem(listWidgetItem)
class Auth(Protocol):
        def __init__(self):
            self.ui1 = Ui_MainWindow()
            self.ui1.setupUi(MainWindow)
            self.ui = Ui_MainWindow1()
            self.ui.setupUi(MainWindow)
        def connectionMade(self):
            print('connected')
        def dataReceived(self, data):
                global check
                global name
                global registered
                global data_auth
                global inf
                c = data.decode('utf-8')
                strick = json.loads(c)
                login = inf['login']
                password = inf['password']
                name.append(inf['login'])
                data_auth = {}
                data_auth['set'] = 'auth'
                data_auth['login'] = login
                data_auth['password'] = password
                data2 = json.dumps(data_auth)
                a = data2.encode('utf-8')
                self.transport.write(a)
                if strick['set'] == 'auth':
                        MainWindow.hide()
                        print('Welcome', inf['login'])
                        registered = True
                        self.ui2 = Ui_MainWindow2()
                        self.ui2.setupUi(MainWindow)
                        MainWindow.show()
                        self.transport.loseConnection()
                elif strick['set'] == 'no auth':
                    self.ui.lineEdit.setStyleSheet("background-color: red;"
                                                   "border-top-right-radius:10%;"
                                                   "border-bottom-right-radius:10%;")
                    self.ui.lineEdit_2.setStyleSheet("background-color: red;"
                                                      "border-top-right-radius:10%;"
                                                      "border-bottom-right-radius:10%;")
        def connectionLost(self, reason):
                print('disconnected, reason:', reason)
class Reg(Protocol):
    def __init__(self):
        self.ui1 = Ui_MainWindow()
        self.ui1.setupUi(MainWindow)
        self.ui = Ui_MainWindow1()
        self.ui.setupUi(MainWindow)
    def connectionMade(self):
        print('connected')
    def dataReceived(self, data):
        global check
        global name
        global registered
        global data_auth
        global inf
        c = data.decode('utf-8')
        strick = json.loads(c)
        login = inf['login']
        password = inf['password']
        name.append(inf['login'])
        data_auth = {}
        data_auth['set'] = 'registr'
        data_auth['login'] = login
        data_auth['password'] = password
        data2 = json.dumps(data_auth)
        a = data2.encode('utf-8')
        self.transport.write(a)
        if strick['set'] == 'auth':
            print('Welcome', inf['login'])
            registered = True
            MainWindow.hide()
            self.ui2 = Ui_MainWindow2()
            self.ui2.setupUi(MainWindow)
            MainWindow.show()
            self.transport.loseConnection()
        elif strick['set'] == 'no auth':
            self.ui.lineEdit.setStyleSheet("background-color: red;"
                                           "border-top-right-radius:10%;"
                                           "border-bottom-right-radius:10%;")
            self.ui.lineEdit_2.setStyleSheet("background-color: red;"
                                             "border-top-right-radius:10%;"
                                             "border-bottom-right-radius:10%;")

    def connectionLost(self, reason):
        print('disconnected, reason:', reason)
class GetMessages(Protocol):
    def connectionMade(self):
        print('Get message connected')
    def dataReceived(self, data):
            g = data.decode('utf-8')
            strick3 = json.loads(g)
            set2 = {}
            b = ''.join(name)
            set2['nick'] = b
            set2['set'] = 'Get'
            data2 = json.dumps(set2)
            a = data2.encode('utf-8')
            self.transport.write(a)
            if strick3['set'] == 'no mesg':
                print('No mess')
            elif strick3['set'] == 'GET':
                print(strick3['mesg'])
    def connectionLost(self, reason):
        print('disconected')
class ClientWriteMessages(Protocol):
    def connectionMade(self):
        print('Get message connected')
    def dataReceived(self, data):
        data_login = {}
        b = ''.join(name)
        print(b)
        data_login['sender'] = b
        data_login['receipient'] = 'Dima'
        data_login['set'] = 'write message'
        data_login['message'] = message['message']
        string = json.dumps(data_login)
        format_utf = string.encode('utf-8')
        self.transport.write(format_utf)
    def connectionLost(self, reason):
        print('disconected')
class ClientChatFactory(ClientFactory):
        def startedConnecting(self, connector):
            print('connect..')
        def buildProtocol(self, addr):
            return Auth()
        def clientConnectionFailed(self, connector, reason):
            print('ConnectionFailed, reason:', reason)
        def clientConnectionLost(self, connector, reason):
            print('ConnectionLost, reason:', reason)
class ClientChatFactory2(ClientFactory):
    def startedConnecting(self, connector):
        print('connect..')
    def buildProtocol(self, addr):
        return Reg()
    def clientConnectionFailed(self, connector, reason):
        print('ConnectionFailed, reason:', reason)
    def clientConnectionLost(self, connector, reason):
        print('ConnectionLost, reason:', reason)
class ClientChatFactory3(ClientFactory):
    def startedConnecting(self, connector):
        print('connect..')
    def buildProtocol(self, addr):
        return GetMessages()
    def clientConnectionFailed(self, connector, reason):
        print('ConnectionFailed, reason:', reason)
    def clientConnectionLost(self, connector, reason):
        print('ConnectionLost, reason:', reason)
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    import qt5reactor
    qt5reactor.install()
    MainWindow = QtWidgets.QMainWindow()
    from twisted.internet import reactor
    ui = Ui_MainWindow1()
    ui.setupUi(MainWindow)
    MainWindow.show()
    reactor.run()





